@page "/contact"
@rendermode InteractiveServer
@using Architectures.BaseSources.Models
@inject IHttpClientFactory _httpClientFactory

<PageTitle>Contact</PageTitle>

<h3>Fetch Contact</h3>

<div class="row g-2">
    <div class="col-auto">
        <input class="form-control" type="number" @bind="contactId" placeholder="Enter contact ID" />
    </div>
    <div class="col-auto">
        <button class="btn btn-success" @onclick="GetContact">Get Contact</button>
    </div>
</div>

@if (contact is not null)
{
    <div class="mt-3">
        <p><strong>ID:</strong> @contact.Id</p>
        <p><strong>Full Name:</strong> @contact.FullName</p>
        <p><strong>Message:</strong> @contact.Message</p>
    </div>
}

@code {
    private ContactDto? contact;
    private int contactId;

    private async Task GetContact()
    {
        var client = _httpClientFactory.CreateClient("ApiGateway");

        try
        {
            contact = await client.GetFromJsonAsync<ContactDto>($"support/contact/{contactId}");
        }
        catch (Exception ex)
        {
            contact = new ContactDto
            {
                Id = contactId,
                FullName = "Not Found",
                Message = ex.Message
            };
        }
    }
}
